name: Build Linux ARM64
on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set environment variables
        run: |
          echo "GOARCH=${{ inputs.arch }}" >> $GITHUB_ENV
          echo "GOOS=linux" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${GITHUB_SHA}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Print environment variables
        run: |
          echo "GOARCH=${GOARCH}"
          echo "GOOS=${GOOS}"
          echo "VERSION=${VERSION}"

      - name: Build for Linux ARM64
        run: |
          docker buildx build --platform linux/arm64 -t initia-builder:arm64 -f - . << EOF
          FROM arm64v8/golang:1.22.4
          RUN apt-get update && apt-get install -y make
          WORKDIR /go/src/app
          COPY . .
          RUN go mod download
          RUN make build-linux-with-shared-library
          EOF

          docker create --name extract initia-builder:arm64
          docker cp extract:/go/src/app/build ./build
          docker rm extract

          cd ./build
          mkdir -p initia_${VERSION}
          mv libmovevm.so initia_${VERSION}/libmovevm.${GOARCH}.so
          mv libcompiler.so initia_${VERSION}/libcompiler.${GOARCH}.so
          mv initiad initia_${VERSION}/
          tar -czvf initia_${VERSION}_Linux_${GOARCH}.tar.gz initia_${VERSION}

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          gsutil cp ./build/initia_${VERSION}_Linux_${GOARCH}.tar.gz gs://${GCS_BUCKET}/initia/

      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if gsutil stat gs://${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz; then
            echo "File successfully uploaded"
            echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz" >> $GITHUB_STEP_SUMMARY
          else
            echo "File upload failed"
            exit 1
          fi
