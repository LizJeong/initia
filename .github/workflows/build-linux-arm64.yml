name: Build Linux ARM64

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.4'

      - name: Install dependencies for ARM builds
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static gcc-aarch64-linux-gnu

      - name: Set environment variables
        run: |
          echo "GOARCH=arm64" >> $GITHUB_ENV
          echo "GOOS=linux" >> $GITHUB_ENV
          echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          else
            VERSION=${GITHUB_SHA}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          fi

      - name: Print environment variables
        run: |
          echo "GOARCH=${GOARCH}"
          echo "GOOS=${GOOS}"
          echo "VERSION=${VERSION}"
          echo "CC=${CC}"
          echo "CGO_ENABLED=${CGO_ENABLED}"

      - name: Build for Linux ARM64
        run: |
          export GOARCH=${GOARCH}
          export GOOS=${GOOS}
          export CC=${CC}
          export CGO_ENABLED=${CGO_ENABLED}
          go build -mod=readonly -tags "netgo ledger" -ldflags '-X github.com/cosmos/cosmos-sdk/version.Name=initia -X github.com/cosmos/cosmos-sdk/version.AppName=initiad -X github.com/cosmos/cosmos-sdk/version.Version=${VERSION} -X github.com/cosmos/cosmos-sdk/version.Commit=${VERSION} -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger" -X github.com/cometbft/cometbft/version.TMCoreSemVer=v0.0.0-20240704071957-c46468756c01 -w -s' -trimpath -o build/initiad ./cmd/initiad
          cd ./build
          file initiad
          mkdir -p initia_${VERSION}
          mv libmovevm.so initia_${VERSION}/libmovevm.${GOARCH}.so
          mv libcompiler.so initia_${VERSION}/libcompiler.${GOARCH}.so
          mv initiad initia_${VERSION}/
          tar -czvf initia_${VERSION}_Linux_${GOARCH}.tar.gz initia_${VERSION}

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          gsutil cp ./build/initia_${VERSION}_Linux_${GOARCH}.tar.gz gs://${GCS_BUCKET}/initia/

      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if gsutil stat gs://${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz; then
            echo "File successfully uploaded"
            echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz" >> $GITHUB_STEP_SUMMARY
          else
            echo "File upload failed"
            exit 1
          fi
