name: Build ARM64
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set environment variables
        run: |
          echo "GOARCH=arm64" >> $GITHUB_ENV
          echo "GOOS=linux" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${GITHUB_SHA}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build for ARM64
        run: |
          docker run --rm --platform linux/arm64 -v $(pwd):/go/src/app -w /go/src/app -e GOARCH -e GOOS -e VERSION arm64v8/golang:1.22.4 \
            sh -c "
              git config --global --add safe.directory /go/src/app &&
              go mod download &&
              CGO_ENABLED=1 go build -buildvcs=false -o build/initiad ./cmd/initiad &&
              cd build &&
              mkdir -p initia_build &&
              cp /go/pkg/mod/github.com/initia-labs/movevm@*/api/libmovevm.so initia_build/libmovevm.${GOARCH}.so &&
              cp /go/pkg/mod/github.com/initia-labs/movevm@*/api/libcompiler.so initia_build/libcompiler.${GOARCH}.so &&
              mv initiad initia_build/ &&
              tar -czvf initia_${VERSION}_Linux_${GOARCH}.tar.gz initia_build &&
              mv initia_${VERSION}_Linux_${GOARCH}.tar.gz /go/src/app/
            "
      
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
      
      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          gsutil cp initia_${VERSION}_Linux_${GOARCH}.tar.gz gs://${GCS_BUCKET}/initia/
      
      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if gsutil stat gs://${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz; then
            echo "File successfully uploaded"
            echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz" >> $GITHUB_STEP_SUMMARY
          else
            echo "File upload failed"
            exit 1
          fi
