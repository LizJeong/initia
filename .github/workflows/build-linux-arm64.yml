name: Build ARM64
on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.4'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Set environment variables
        run: |
          echo "GOARCH=${{ inputs.arch }}" >> $GITHUB_ENV
          echo "GOOS=linux" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          else
            VERSION=${GITHUB_SHA}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
          fi

      - name: Print environment variables
        run: |
          echo "GOARCH=${GOARCH}"
          echo "GOOS=${GOOS}"
          echo "VERSION=${VERSION}"


      - name: Build for ARM64
        run: |
          docker run --rm --privileged --platform linux/arm64 \
            -v $(pwd):/go/src/app \
            -w /go/src/app \
            -e GOARCH -e GOOS -e VERSION \
            arm64v8/golang:1.22.4 \
            sh -c "
              export GOARCH=${GOARCH}
              export GOOS=${GOOS}
              apt-get update && apt-get install -y make
              make build-linux-with-shared-library
              cd ./build
              mkdir -p initia_${VERSION}
              mv libmovevm.so initia_${VERSION}/libmovevm.${GOARCH}.so
              mv libcompiler.so initia_${VERSION}/libcompiler.${GOARCH}.so
              mv initiad initia_${VERSION}/
              tar -czvf initia_${VERSION}_Linux_${GOARCH}.tar.gz initia_${VERSION}
              mv initia_${VERSION}_Linux_${GOARCH}.tar.gz /go/src/app/
            "

      - name: List files
        run: ls -l build

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if [ -f ./build/initia_${VERSION}_Linux_${GOARCH}.tar.gz ]; then
            gsutil cp ./build/initia_${VERSION}_Linux_${GOARCH}.tar.gz gs://${GCS_BUCKET}/initia/
          else
            echo "Build artifact not found"
            exit 1
          fi
      
      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if gsutil stat gs://${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz; then
            echo "File successfully uploaded"
            echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_${VERSION}_Linux_${GOARCH}.tar.gz" >> $GITHUB_STEP_SUMMARY
          else
            echo "File upload failed"
            exit 1
          fi
