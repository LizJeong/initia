name: Build Darwin AMD64 with QEMU

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install QEMU and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-user-static binfmt-support gcc-multilib libc6

      - name: Find libdl.so.2 and set LD_LIBRARY_PATH
        run: |
          LIBDL_PATH=$(find / -name "libdl.so.2" 2>/dev/null)
          echo "libdl.so.2 found at: $LIBDL_PATH"
          if [ -z "$LIBDL_PATH" ]; then
            echo "libdl.so.2 not found"
            exit 1
          fi
          export LD_LIBRARY_PATH=$(dirname $LIBDL_PATH):$LD_LIBRARY_PATH
          echo "LD_LIBRARY_PATH set to: $LD_LIBRARY_PATH"

      - name: Set up Go
        run: |
          wget https://golang.org/dl/go1.22.4.linux-amd64.tar.gz
          tar -C /usr/local -xzf go1.22.4.linux-amd64.tar.gz
          echo "PATH=\$PATH:/usr/local/go/bin" >> $GITHUB_ENV

      - name: Set environment variables
        run: |
          echo "GOARCH=amd64" >> $GITHUB_ENV
          echo "GOOS=darwin" >> $GITHUB_ENV
          echo "GITHUB_SHA=${{ github.sha }}" >> $GITHUB_ENV

      - name: Ensure dependencies
        run: go mod tidy

      - name: Print environment variables
        run: |
          echo "GOARCH=${GOARCH}"
          echo "GOOS=${GOOS}"
          echo "GITHUB_SHA=${GITHUB_SHA}"

      - name: Build for Darwin AMD64
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
          CC=gcc
          GOARCH=amd64 GOOS=darwin CGO_ENABLED=1 CC=$CC go build -mod=readonly -tags 'netgo ledger' -ldflags '-X github.com/cosmos/cosmos-sdk/version.Name=initia -X github.com/cosmos/cosmos-sdk/version.AppName=initiad -X github.com/cosmos/cosmos-sdk/version.Version=${GITHUB_SHA} -X github.com/cosmos/cosmos-sdk/version.Commit=${GITHUB_SHA} -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger" -X github.com/cometbft/cometbft/version.TMCoreSemVer=v0.0.0-20240704071957-c46468756c01 -w -s' -trimpath -o build/initiad ./cmd/initiad
          cd ./build
          mkdir -p initia_build
          cp ~/go/pkg/mod/github.com/initia-labs/movevm@*/api/libmovevm.dylib initia_build/libmovevm.${GOARCH}.dylib
          cp ~/go/pkg/mod/github.com/initia-labs/movevm@*/api/libcompiler.dylib initia_build/libcompiler.${GOARCH}.dylib
          mv initiad initia_build/
          tar -czvf initia_Darwin_${GOARCH}.tar.gz initia_build

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          gsutil cp ./build/initia_Darwin_${GOARCH}.tar.gz gs://${GCS_BUCKET}/initia/

      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if gsutil stat gs://${GCS_BUCKET}/initia/initia_Darwin_${GOARCH}.tar.gz; then
            echo "File successfully uploaded"
            echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_Darwin_${GOARCH}.tar.gz" >> $GITHUB_STEP_SUMMARY
          else
            echo "File upload failed"
            exit 1
          fi
