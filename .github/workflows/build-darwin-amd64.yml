name: Build Darwin AMD64
on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
jobs:
  build:
    runs-on: macos-13
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.4'
      - name: Set environment variables
        run: |
          echo "GOARCH=${{ inputs.arch }}" >> $GITHUB_ENV
          echo "GOOS=darwin" >> $GITHUB_ENV
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="v0.0.0-${GITHUB_SHA::8}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "ARCH_NAME=x86_64" >> $GITHUB_ENV
          echo "MOVEVM_VERSION=v0.3.4" >> $GITHUB_ENV
      - name: Ensure dependencies
        run: |
          go mod tidy
          go get github.com/initia-labs/movevm@*
      - name: Print environment variables
        run: |
          echo "GOARCH=${GOARCH}"
          echo "GOOS=${GOOS}"
          echo "VERSION=${VERSION}"
          echo "ARCH_NAME=${ARCH_NAME}"
          echo "MOVEVM_VERSION=*"
      - name: Build for Darwin AMD64
        run: |
          go build -mod=readonly -tags "netgo ledger" -ldflags '-X github.com/cosmos/cosmos-sdk/version.Name=initia -X github.com/cosmos/cosmos-sdk/version.AppName=initiad -X github.com/cosmos/cosmos-sdk/version.Version=${VERSION} -X github.com/cosmos/cosmos-sdk/version.Commit=${GITHUB_SHA} -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger" -X github.com/cometbft/cometbft/version.TMCoreSemVer=v0.0.0-20240704071957-c46468756c01 -w -s' -trimpath -o build/initiad ./cmd/initiad
          cd ./build
          mkdir -p initia_${VERSION}
          cp ~/go/pkg/mod/github.com/initia-labs/movevm@*/api/libmovevm.dylib initia_${VERSION}/libmovevm.${ARCH_NAME}.dylib
          cp ~/go/pkg/mod/github.com/initia-labs/movevm@*/api/libcompiler.dylib initia_${VERSION}/libcompiler.${ARCH_NAME}.dylib
          mv initiad initia_${VERSION}/
          tar -czvf initia_${VERSION}_Darwin_${ARCH_NAME}.tar.gz initia_${VERSION}
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          gsutil cp ./build/initia_${VERSION}_Darwin_${ARCH_NAME}.tar.gz gs://${GCS_BUCKET}/initia/
      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if gsutil stat gs://${GCS_BUCKET}/initia/initia_${VERSION}_Darwin_${ARCH_NAME}.tar.gz; then
            echo "File successfully uploaded"
            echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_${VERSION}_Darwin_${ARCH_NAME}.tar.gz" >> $GITHUB_STEP_SUMMARY
          else
            echo "File upload failed"
            exit 1
          fi
