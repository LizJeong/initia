name: Build Darwin AMD64 with Dockerfile

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t custom-build-image:latest -f .github/workflows/Dockerfile .

      - name: Run build inside Docker
        run: |
          docker run --rm \
            -e GOARCH=amd64 \
            -e GOOS=darwin \
            -e GITHUB_SHA=${{ github.sha }} \
            -v ${{ github.workspace }}:/workspace \
            custom-build-image:latest \
            /bin/bash -c "cd /workspace && \
              echo 'Environment Variables:' && \
              env && \
              go mod tidy && \
              go build -v -mod=readonly -tags 'netgo ledger' -ldflags '-X github.com/cosmos/cosmos-sdk/version.Name=initia -X github.com/cosmos/cosmos-sdk/version.AppName=initiad -X github.com/cosmos/cosmos-sdk/version.Version=${GITHUB_SHA} -X github.com/cosmos/cosmos-sdk/version.Commit=${GITHUB_SHA} -X 'github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger' -X github.com/cometbft/cometbft/version.TMCoreSemVer=v0.0.0-20240704071957-c46468756c01 -w -s' -trimpath -o build/initiad && \
              cd ./build && \
              mkdir -p initia_build && \
              cp ~/go/pkg/mod/github.com/initia-labs/movevm@*/api/libmovevm.dylib initia_build/libmovevm.${GOARCH}.dylib && \
              cp ~/go/pkg/mod/github.com/initia-labs/movevm@*/api/libcompiler.dylib initia_build/libcompiler.${GOARCH}.dylib && \
              mv initiad initia_build/ && \
              tar -czvf initia_Darwin_${GOARCH}.tar.gz initia_build"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.6.0
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0

      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          gsutil cp ./build/initia_Darwin_${GOARCH}.tar.gz gs://${GCS_BUCKET}/initia/

      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          if gsutil stat gs://${GCS_BUCKET}/initia/initia_Darwin_${GOARCH}.tar.gz; then
            echo "File successfully uploaded"
            echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_Darwin_${GOARCH}.tar.gz" >> $GITHUB_STEP_SUMMARY
          else
            echo "File upload failed"
            exit 1
          fi
