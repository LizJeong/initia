# name: Build and Upload to GCS
# on:
#   push:
#     tags:
#       - 'v*'
# jobs:
#   build-and-upload:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: 'read'
#       id-token: 'write'

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Go
#         uses: actions/setup-go@v4
#         with:
#           go-version: '1.22.4'

#       - name: Build for Linux
#         run: |
#           make build-linux-with-shared-library
#           cd ./build
#           mv libmovevm.so libmovevm.amd64.so
#           mv libcompiler.so libcompiler.amd64.so
#           tar -czvf initia_${GITHUB_REF#refs/tags/}_Linux_amd64.tar.gz ./initiad libmovevm.amd64.so libcompiler.amd64.so

#       - name: Google Auth
#         id: auth
#         uses: 'google-github-actions/auth@v2'
#         with:
#           credentials_json: '${{ secrets.GCP_SA_KEY }}'

#       - name: Set up Cloud SDK
#         uses: 'google-github-actions/setup-gcloud@v2'

#       - name: Upload to GCS
#         env:
#           GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
#         run: |
#           gsutil cp ./build/initia_${GITHUB_REF#refs/tags/}_Linux_amd64.tar.gz gs://${GCS_BUCKET}/initia/
          
#       - name: Verify upload
#         env:
#           GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
#         run: |
#           if gsutil stat gs://${GCS_BUCKET}/initia/initia_${GITHUB_REF#refs/tags/}_Linux_amd64.tar.gz; then
#             echo "File successfully uploaded"
#           else
#             echo "File upload failed"
#             exit 1
#           fi
          
#       - name: Generate public URL
#         env:
#           GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
#         run: |
#           echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/initia_${GITHUB_REF#refs/tags/}_Linux_amd64.tar.gz" >> $GITHUB_STEP_SUMMARY
